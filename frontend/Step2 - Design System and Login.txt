Como Design System iremos utilizar o Bootstrap, sendo assim, execute o comando para instala-lo:
$ npm install bootstrap
(certifique-se que está dentro da pasta ./frontend/bankcsm-ui ao executar o comando)

Ajuste o arquivo angular.json para que a parte de styles fique da seguinte forma:
            "styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "src/styles.scss"
            ],

Agora vamos criar nosso primeiro componente para realizar login na aplicação. Execute:
$ ng generate component pages/login
(será criada a pasta src/app/pages/login com os arquivos HTML, SCSS, SPEC.TS e TS)

Adicione o seguinte código no arquivo login.component.html:
/***** login.component.html start *****/
<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card p-4 shadow" style="max-width: 400px; width: 100%;">
        <h2 class="text-center">Login</h2>
        <button class="btn btn-primary w-100 mt-3">
            Entrar com Google
        </button>
    </div>
</div>
/***** login.component.html end *****/

Antes de fazermos um primeiro teste, vamos configurar nossas rotas. Ajuste o arquivo app.routes.ts com o seguinte código:
/***** app.routes.ts start *****/
import { Routes } from '@angular/router';
import { LoginComponent } from './pages/login/login.component';

export const routes: Routes = [
  { path: 'login', component: LoginComponent },
  { path: '', redirectTo: 'login', pathMatch: 'full' },
];
/***** app.routes.ts end *****/

No arquivo app.module.ts adicione a seguinte linha dentro dos 'imports' do módulo: RouterModule.forRoot(routes)
(para remover os erros você terá que adicionar 2 imports:
import { RouterModule } from '@angular/router';
import { routes } from './app.routes';)

Agora ao executar a app devemos conseguir ver uma pequena área para login com um botão
$ ng serve
